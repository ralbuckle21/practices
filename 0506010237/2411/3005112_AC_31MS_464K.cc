/* f[i][j]±íÊ¾µÚiÐÐ£¬·½¸ñÅÅ²¼Îª¶þ½øÖÆÊýj£¨µÚkÎ»ÉÏÎª1±íÊ¾Í¹³öÒ»¸ö¸ñ×Ó£¬Îª0±íÊ¾²»Í¹³ö£©
   µÄ·½°¸Êý¡£ÓÃDFS½øÐÐ×´Ì¬×ªÒÆ¡£*/
#include <iostream>
long long f[12][2048], n, m;
void dfs(int i, int j, int jj, int s)//jÊÇ³õÊ¼×´Ì¬£¬jjÊÇÄ¿±ê×´Ì¬.s±íÊ¾ÁÐÊý
{
    if (s == m)//°ÑiÐÐmÁÐ·ÅºÃ 
        f[i + 1][jj] += f[i][j];//µÈÓÚI+1ÐÐ±»Õ¼È¥µÄ¸ñ×ÓµÄ2½øÖÆÎªJJÓ¦¸Ã¿ÉÒÔ¶à·Åf[i][j]µÄ·½ÂÔ 
    else if ((jj & (1 << s)) == 0)//±íÊ¾µÚJÁÐÄÜ·Å1/0 
    {
        dfs(i, j, jj | (1 << s), s + 1);//·Å1 
        if (s < m - 1 && (jj & (1 << (s + 1))) == 0) dfs(i, j, jj, s + 2);//·Å0£¨ºáÕ¼2¸ñ£© 
    }
    else//±íÊ¾´Ë´¦Ö»ÄÜ·Å0 
       dfs(i, j, jj & ~(1 << s), s + 1);//(jj & (1 << s)Õâ¸öÎ»ÖÃÒÑ¾­±»Õ¼ 
}
int main()
{
    while (scanf("%d%d", &n, &m), n + m != 0)
    {
        memset(f, 0, sizeof(f));
        f[0][0] = 1;
        for (int i = 0; i < n; i++)
            for (int j = 0; j < (1 << m); j++)
                if (f[i][j]) //¼ôÖ¦£¨Îª0Ã»ÓÐ±ØÒª¿¼ÂÇ£© 
                    dfs(i, j, j, 0);
        printf("%I64d\n", f[n][0]);//²»Õ¼nÐÐÒ²¼´0~n-1·ÅÂúµÄ·½·¨Êý 
    }
    system("pause");
    return 0;
}
